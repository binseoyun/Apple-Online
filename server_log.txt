[dotenv@17.2.0] injecting env (7) from .env (tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit)
[dotenv@17.2.0] injecting env (0) from .env (tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit)
🥇 전체 유저 랭킹 업데이트를 시작합니다...
✅ MySQL Pool Ready!
✅ Redis Adapter is connected.
🚀 Server is running on http://localhost:3000
✅ 랭킹 업데이트 완료! 총 28개의 랭킹 정보가 변경되었습니다.
✅ A user visited our server!: 2
[dotenv@17.2.0] injecting env (7) from .env (tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] })
[dotenv@17.2.0] injecting env (0) from .env (tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`)
🥇 전체 유저 랭킹 업데이트를 시작합니다...
✅ MySQL Pool Ready!
✅ Redis Adapter is connected.
🚀 Server is running on http://localhost:3000
✅ 랭킹 업데이트 완료! 총 28개의 랭킹 정보가 변경되었습니다.
✅ A user visited our server!: 2
[dotenv@17.2.0] injecting env (7) from .env (tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild)
[dotenv@17.2.0] injecting env (0) from .env (tip: ⚙️  specify custom .env file path with { path: '/custom/path/.env' })
🥇 전체 유저 랭킹 업데이트를 시작합니다...
✅ MySQL Pool Ready!
✅ Redis Adapter is connected.
🚀 Server is running on http://localhost:3000
✅ 랭킹 업데이트 완료! 총 28개의 랭킹 정보가 변경되었습니다.
미인증 사용자 접속 시도
✅ A user visited our server!: 2
✅ A user visited our server!: 2
✅ A user visited our server!: 2
✅ A user visited our server!: 2
[dotenv@17.2.0] injecting env (7) from .env (tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit)
[dotenv@17.2.0] injecting env (0) from .env (tip: 🔐 prevent building .env in docker: https://dotenvx.com/prebuild)
🥇 전체 유저 랭킹 업데이트를 시작합니다...
✅ MySQL Pool Ready!
✅ Redis Adapter is connected.
🚀 Server is running on http://localhost:3000
✅ 랭킹 업데이트 완료! 총 28개의 랭킹 정보가 변경되었습니다.
✅ A user visited our server!: 2
✅ A user visited our server!: 2
✅ A user visited our server!: 2
[dotenv@17.2.0] injecting env (7) from .env (tip: 🔐 prevent committing .env to code: https://dotenvx.com/precommit)
[dotenv@17.2.0] injecting env (0) from .env (tip: 🔐 encrypt with dotenvx: https://dotenvx.com)
🥇 전체 유저 랭킹 업데이트를 시작합니다...
✅ MySQL Pool Ready!
✅ Redis Adapter is connected.
🚀 Server is running on http://localhost:3000
✅ 랭킹 업데이트 완료! 총 28개의 랭킹 정보가 변경되었습니다.
미인증 사용자 접속 시도
✅ A user visited our server!: 2
[dotenv@17.2.0] injecting env (7) from .env (tip: ⚙️  load multiple .env files with { path: ['.env.local', '.env'] })
[dotenv@17.2.0] injecting env (0) from .env (tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`)
🥇 전체 유저 랭킹 업데이트를 시작합니다...
✅ MySQL Pool Ready!
✅ Redis Adapter is connected.
🚀 Server is running on http://localhost:3000
✅ 랭킹 업데이트 완료! 총 28개의 랭킹 정보가 변경되었습니다.
✅ A user visited our server!: 2
disconnect 핸들러 내부의 io 객체: true
disconnect 핸들러 내부의 io.adapter: [Function: adapter]
[dotenv@17.2.0] injecting env (7) from .env (tip: 🔐 encrypt with dotenvx: https://dotenvx.com)
[dotenv@17.2.0] injecting env (0) from .env (tip: ⚙️  suppress all logs with { quiet: true })
🥇 전체 유저 랭킹 업데이트를 시작합니다...
✅ MySQL Pool Ready!
✅ Redis Adapter is connected.
🚀 Server is running on http://localhost:3000
✅ 랭킹 업데이트 완료! 총 28개의 랭킹 정보가 변경되었습니다.
미인증 사용자 접속 시도
✅ A user visited our server!: 2
disconnect 핸들러 내부의 io 객체: true
disconnect 핸들러 내부의 io.adapter: [Function: adapter]
[dotenv@17.2.0] injecting env (7) from .env (tip: 🔐 encrypt with dotenvx: https://dotenvx.com)
[dotenv@17.2.0] injecting env (0) from .env (tip: 🛠️  run anywhere with `dotenvx run -- yourcommand`)
🥇 전체 유저 랭킹 업데이트를 시작합니다...
✅ MySQL Pool Ready!
✅ Redis Adapter is connected.
🚀 Server is running on http://localhost:3000
✅ 랭킹 업데이트 완료! 총 28개의 랭킹 정보가 변경되었습니다.
✅ A user visited our server!: 2
disconnect 핸들러 내부의 io 객체: true
disconnect 핸들러 내부의 io.adapter: [Function: adapter]
0 1
✅ A user visited our server!: 2
disconnect 핸들러 내부의 io 객체: true
disconnect 핸들러 내부의 io.adapter: [Function: adapter]
0 1
✅ A user visited our server!: 2
disconnect 핸들러 내부의 io 객체: true
disconnect 핸들러 내부의 io.adapter: [Function: adapter]
0 1
✅ A user visited our server!: 2
disconnect 핸들러 내부의 io 객체: true
disconnect 핸들러 내부의 io.adapter: [Function: adapter]
0 1
